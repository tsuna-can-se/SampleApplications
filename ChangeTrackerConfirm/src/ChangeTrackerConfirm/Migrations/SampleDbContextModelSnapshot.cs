// <auto-generated />
using ChangeTrackerConfirm.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChangeTrackerConfirm.Migrations
{
    [DbContext(typeof(SampleDbContext))]
    partial class SampleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ChangeTrackerConfirm.Models.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "本"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "おもちゃ"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "PC・周辺機器"
                        });
                });

            modelBuilder.Entity("ChangeTrackerConfirm.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Price");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 1L,
                            Name = "C#の本",
                            Price = 2000m
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 1L,
                            Name = "F#の本",
                            Price = 1800m
                        },
                        new
                        {
                            Id = 3L,
                            CategoryId = 2L,
                            Name = "つみき",
                            Price = 3500m
                        },
                        new
                        {
                            Id = 4L,
                            CategoryId = 2L,
                            Name = "わなげ",
                            Price = 2000m
                        },
                        new
                        {
                            Id = 5L,
                            CategoryId = 2L,
                            Name = "トランプ",
                            Price = 500m
                        },
                        new
                        {
                            Id = 6L,
                            CategoryId = 3L,
                            Name = "ラップトップパソコン",
                            Price = 50000m
                        },
                        new
                        {
                            Id = 7L,
                            CategoryId = 3L,
                            Name = "モバイルノートパソコン",
                            Price = 85000m
                        },
                        new
                        {
                            Id = 8L,
                            CategoryId = 3L,
                            Name = "デスクトップパソコン",
                            Price = 120000m
                        },
                        new
                        {
                            Id = 9L,
                            CategoryId = 3L,
                            Name = "マウス",
                            Price = 3000m
                        },
                        new
                        {
                            Id = 10L,
                            CategoryId = 3L,
                            Name = "キーボード",
                            Price = 5000m
                        },
                        new
                        {
                            Id = 11L,
                            CategoryId = 3L,
                            Name = "モニター",
                            Price = 20000m
                        });
                });

            modelBuilder.Entity("ChangeTrackerConfirm.Models.Product", b =>
                {
                    b.HasOne("ChangeTrackerConfirm.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Products_Categories");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ChangeTrackerConfirm.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
